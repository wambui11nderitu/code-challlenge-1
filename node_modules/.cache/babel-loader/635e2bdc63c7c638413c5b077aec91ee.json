{"ast":null,"code":"var _jsxFileName = \"/home/student/react/Challenge-1-Bank-of-Flatiron-021023 (3)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\n// AccountContainer.js\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch transactions\");\n      }\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n  const addTransaction = async newTransaction => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTransaction)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add transaction\");\n      }\n      const data = await response.json();\n      setTransactions([...transactions, data]);\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions,\n      searchTerm: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"TJdUscyMgtOJRF9rZmcbRXPgMXs=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transactions","setTransactions","searchTerm","setSearchTerm","fetchTransactions","response","fetch","ok","Error","data","json","error","console","addTransaction","newTransaction","method","headers","body","JSON","stringify","handleSearch","term","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onAddTransaction","_c","$RefreshReg$"],"sources":["/home/student/react/Challenge-1-Bank-of-Flatiron-021023 (3)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["// AccountContainer.js\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch transactions\");\n      }\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n\n  const addTransaction = async (newTransaction) => {\n    try {\n      const response = await fetch(\"http://localhost:8001/transactions\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newTransaction),\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add transaction\");\n      }\n      const data = await response.json();\n      setTransactions([...transactions, data]);\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  };\n\n  const handleSearch = (term) => {\n    setSearchTerm(term);\n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={addTransaction} />\n      <TransactionsList transactions={transactions} searchTerm={searchTerm} />\n    </div>\n  );\n}\n\nexport default AccountContainer;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdY,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,eAAe,CAACQ,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAOC,cAAc,IAAK;IAC/C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjES,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc;MACrC,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAES,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMS,YAAY,GAAIC,IAAI,IAAK;IAC7BlB,aAAa,CAACkB,IAAI,CAAC;EACrB,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACH,MAAM;MAAC6B,QAAQ,EAAEH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC9B,OAAA,CAACF,kBAAkB;MAACiC,gBAAgB,EAAEf;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxD9B,OAAA,CAACJ,gBAAgB;MAACO,YAAY,EAAEA,YAAa;MAACE,UAAU,EAAEA;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAAC5B,EAAA,CAnDQD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAqDzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}